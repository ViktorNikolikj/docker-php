apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-php-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-php-app
  template:
    metadata:
      labels:
        app: my-php-app
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/PHP_project/nginx-config
            - name: php-files
              mountPath: /var/www/html
        - name: php-app
          image: viktor27/php_project-php:latest
          ports:
            - containerPort: 9000
        

          volumeMounts:
            - name: php-files
              mountPath: /var/www/html
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: user
            - name: MYSQL_DATABASE
              value: onlineshop
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: nginx-config
          hostPath:
            path: /PHP_project/nginx-config  # Replace with the host path to your nginx-config directory
        - name: php-files
          hostPath:
            path: /PHP_project/online-shopping-system  # Replace with the host path to your online-shopping-system directory
        - name: mysql-data
          emptyDir: {}  # Use an emptyDir for simplicity, but consider using a PersistentVolume for data persistence
#imagePullSecrets:
#            - name: hubproxy.docker.internal:5555  # Name of the Docker registry secret you created

---

apiVersion: v1
kind: Service
metadata:
  name: my-php-app
spec:
  selector:
    app: my-php-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: NodePort  # Use "LoadBalancer" if on cloud provider supporting external load balancers