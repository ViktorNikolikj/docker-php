version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  nginx:
    image: nginx:latest
    container_name: my-php-app-nginx
    ports:
      - "80:9090"
    volumes:
      - ./nginx-config:/etc/nginx/conf.d
      - ./online-shopping-system:/var/www/html
    depends_on:
      - php
  nginx-exporter:
   image: nginx/nginx-prometheus-exporter
   container_name: nginx-prometheus-exporter
   ports:
     - "9113:9113"  # Expose exporter's metrics on port 9113
   command: -nginx.scrape-uri=http://nginx.production.svc.cluster.local:9090/stub_status
             #-nginx.scrape-uri=http://nginx:80/nginx_status

   depends_on:
    - nginx

  php:
    build: .
    volumes:
      - ./online-shopping-system:/var/www/html
    #command: ["php-fpm"]
    # Install the php-mysql package
    # Also, update and upgrade the system before installing the package
    # The && is used to run multiple commands in a single RUN instruction
    # Note: This assumes that the official PHP image is based on Debian/Ubuntu
    # If using a different base image, the package manager and package name may differ.


  mysql:
      image: mysql:5.7
      container_name: my-php-app-mysql
      ports:
        - "3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: user
        MYSQL_DATABASE: onlineshop
      volumes:
      #  - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
        - ./onlineshop.sql:/docker-entrypoint-initdb.d/onlineshop.sql
        - mysql_data:/var/lib/mysql # Define a volume for MySQL data storage

volumes:
  mysql_data:  # Define the volume named 'mysql_data'